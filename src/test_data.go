package main

type TestData struct {
	HeadersResponse                string
	HeadersStatusCode              int
	BlocksResponse                 string
	BlocksStatusCode               int
	BlockHashResponse              string
	TransactionReceiptResponse     string
	SyncCommitteesResponse         string
	SyncCommitteesStatusCode       int
	SyncCommitteesDetailResponse   string
	SyncCommitteesDetailStatusCode int
}

var AllTestData = map[string]TestData{
	"mev": {
		HeadersResponse:   `{"data":[{"header":{"message":{"slot":"4700015"}}}]}`,
		HeadersStatusCode: 200,
		BlocksStatusCode:  200,
		BlocksResponse: `{
			"data":{
				"message":{
					"body":{
						"execution_payload": {
							"block_hash": "1111"
						}
					}
				}
			}
		}`,
		BlockHashResponse: `{
			"jsonrpc": "2.0",
			"id": 1,
			"result": {
				"baseFeePerGas": "0x1",
				"gasUsed": "0x2",
				"parentHash": "0x0000000000000000000000000000000000000000000000000000000000000000",
				"sha3Uncles": "0x1dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d49347",
				"stateRoot": "0x0000000000000000000000000000000000000000000000000000000000000000",
				"transactionsRoot": "0x0000000000000000000000000000000000000000000000000000000000000000",
				"receiptsRoot": "0x0000000000000000000000000000000000000000000000000000000000000000",
				"difficulty": "0x0",
				"number": "0x0",
				"gasLimit": "0x11",
				"timestamp": "0x111",
				"extraData": "0x0000000000000000000000000000000000000000000000000000000000000001",
				"uncles": [],
				"logsBloom": "0x
				"transactions": [
					{
						"type": "0x2",
						"chainId": "0x1",
						"nonce": "0x1",
						"gas": "0x1",
						"maxPriorityFeePerGas": "0x1",
						"maxFeePerGas": "0x1",
						"value": "0x0",
						"input": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff",
						"r": "0x0",
						"s": "0x0",
						"v": "0x0"
					}
				]
			}
		}`,
		TransactionReceiptResponse: `{
			"jsonrpc": "2.0", 
			"id": 1, 
			"result": {
				"gasUsed": "0x1", 
				"cumulativeGasUsed": "0x1", 
				"effectiveGasPrice": "0x4", 
				"type": "0x2",
				"logs": [],
				"transactionHash": "0x0000000000000000000000000000000000000000000000000000000000000001",
				"logsBloom": "0x
			}
		}`,
	},
	"vanilla": {
		HeadersResponse:   `{"data":[{"header":{"message":{"slot":"4700015"}}}]}`,
		HeadersStatusCode: 200,
		BlocksStatusCode:  200,
		BlocksResponse: `{
			"data":{
				"message":{
					"body":{
						"execution_payload": {
							"block_hash": "1111"
						}
					}
				}
			}
		}`,
		BlockHashResponse: `{
			"jsonrpc": "2.0",
			"id": 1,
			"result": {
				"baseFeePerGas": "0x1",
				"gasUsed": "0x2",
				"parentHash": "0x0000000000000000000000000000000000000000000000000000000000000000",
				"sha3Uncles": "0x1dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d49347",
				"stateRoot": "0x0000000000000000000000000000000000000000000000000000000000000000",
				"transactionsRoot": "0x0000000000000000000000000000000000000000000000000000000000000000",
				"receiptsRoot": "0x0000000000000000000000000000000000000000000000000000000000000000",
				"difficulty": "0x0",
				"number": "0x0",
				"gasLimit": "0x11",
				"timestamp": "0x111",
				"extraData": "0x0000000000000000000000000000000000000000000000000000000000000001",
				"uncles": [],
				"logsBloom": "0x
				"transactions": [
					{
						"type": "0x2",
						"chainId": "0x1",
						"nonce": "0x1",
						"gas": "0x1",
						"maxPriorityFeePerGas": "0x1",
						"maxFeePerGas": "0x1",
						"value": "0x0",
						"input": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff",
						"r": "0x0",
						"s": "0x0",
						"v": "0x0"
					}
				]
			}
		}`,
		TransactionReceiptResponse: `{
			"jsonrpc": "2.0", 
			"id": 1, 
			"result": {
				"gasUsed": "0x3", 
				"cumulativeGasUsed": "0x1", 
				"effectiveGasPrice": "0x1", 
				"type": "0x2",
				"logs": [],
				"transactionHash": "0x0000000000000000000000000000000000000000000000000000000000000001",
				"logsBloom": "0x
			}
		}`,
	},
	"rewardMissingSlot": {
		HeadersResponse:   `{"data":[{"header":{"message":{"slot":"4700012"}}}]}`,
		HeadersStatusCode: 200,
	},
	"rewardFutureSlot": {
		HeadersResponse:   `{"data":[{"header":{"message":{"slot":"1000"}}}]}`,
		HeadersStatusCode: 200,
	},
	"syncMissingSlot": {
		SyncCommitteesStatusCode: 400,
	},
	"syncFutureSlot": {
		SyncCommitteesStatusCode: 404,
	},
	"syncDuties": {
		SyncCommitteesResponse:         `{"data": {"validators": ["1"]}}`,
		SyncCommitteesStatusCode:       200,
		SyncCommitteesDetailStatusCode: 200,
		SyncCommitteesDetailResponse:   `{"data": [{"validator": {"pubkey": "0x0000000000000000000000000000000000000000000000000000000000000001"}}]}`,
	},
}
